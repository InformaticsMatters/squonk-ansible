---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: cellexecutor
  namespace: {{ sq_namespace }}
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      name: cellexecutor
  template:
    metadata:
      name: cellexecutor
      labels:
        name: cellexecutor
    spec:
      serviceAccountName: squonk

      # Affinity - avoid 'worker' nodes,
      # and prefer 'application' nodes
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: informaticsmatters.com/purpose-application
                operator: Exists

      containers:
      - name: cellexecutor
        image: {{ sq_image_registry }}/squonk/cellexecutor:{{ sq_image_tag }}
{% if sq_image_tag in ['latest', 'stable'] %}
        imagePullPolicy: Always
{% else %}
        imagePullPolicy: IfNotPresent
{% endif %}
        terminationMessagePolicy: FallbackToLogsOnError
        env:
        - name: RABBITMQ_HOSTNAME
          valueFrom:
            secretKeyRef:
              name: rabbitmq
              key: host
        - name: RABBITMQ_SQUONK_PASSWORD
          valueFrom:
            secretKeyRef:
              name: rabbitmq
              key: default_user_password
        - name: SQUONK_CONTAINER_RUNNER_TYPE
          value: openshift
        - name: SQUONK_DOCKER_WORK_DIR
          value: /squonk/work/docker
        - name: SQUONK_CELL_JOB_PROJECT_NAME
          value: {{ sq_namespace }}
        - name: SQUONK_SERVICE_ACCOUNT
          value: squonk
        - name: SQUONK_POD_BASE_NAME
          value: squonk-cell-pod
        - name: SQUONK_POD_ENVIRONMENT
          valueFrom:
            secretKeyRef:
              name: squonk-app-secrets
              key: pod-env
        - name: SQUONK_POD_LOG_HISTORY
          value: "{{ sq_pod_log_history }}"
        - name: SQUONK_NEXTFLOW_IMAGE
          value: {{ sq_nextflow_image }}
        - name: SQUONK_WORK_DIR_PVC_NAME
          value: workdir
        - name: SQUONK_DEBUG_MODE
          value: '{{ sq_debug_mode }}'
        - name: SQUONK_POD_DEBUG_MODE
          value: '{{ sq_pod_debug_mode }}'
        - name: SQUONK_POD_CPU_RESOURCE
          value: '{{ sq_pod_cpu_resource }}'
        - name: SQUONK_POD_START_GRACE_PERIOD_M
          value: '5'
        - name: SQUONK_POD_IMAGE_PULL_POLICY
          value: '{{ sq_pod_image_pull_policy }}'
        - name: SQUONK_POD_NODE_AFFINITY_VALUE
          value: '{{ sq_pod_node_affinity_value }}'
        - name: SQUONK_NF_QUEUE_SIZE
          value: '{{ sq_nf_queue_size }}'
        - name: JAVA_TOOL_OPTIONS
          value: '{{ sq_cell_java_tool_options }}'
#        - name: JAVA_OPTS
#          value: "-Djava.util.logging.config.file=/logging.properties"
{% if sq_image_tag in ['latest', 'stable'] %}
        # CICD_TRIGGER_ID is variable whose value is used to force
        # a redeployment of the underlying containers. This is used in
        # situations where the origin image's tag may not have changed
        # (e.g. it's 'latest' or 'stable') but a new build is expected to
        # be available. Without changing something in the Deployment spec
        # a roll-out will not occur if the tag has not changed.
        - name: CICD_TRIGGER_ID
          value: '{{ ansible_date_time.iso8601_micro }}'
{% endif %}
        ports:
        - name: http
          containerPort: 8080
        resources:
          limits:
{% if sq_cell_cpu_limit %}
            cpu: {{ sq_cell_cpu_limit }}
{% endif %}
{% if sq_cell_mem_limit %}
            memory: {{ sq_cell_mem_limit }}
{% endif %}
          requests:
            cpu: {{ sq_cell_cpu_request }}
            memory: {{ sq_cell_mem_request }}
        volumeMounts:
        - mountPath: /squonk/work/docker
          name: squonk-work-dir

      volumes:
      - name: squonk-work-dir
        persistentVolumeClaim:
          claimName: workdir
