---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: chemcentral-search
  namespace: {{ sq_namespace }}
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      name: chemcentral-search
  template:
    metadata:
      name: chemcentral-search
      labels:
        name: chemcentral-search
    spec:
      serviceAccountName: squonk

      # Affinity - avoid 'worker' nodes,
      # and prefer 'application' nodes
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: informaticsmatters.com/purpose-application
                operator: Exists

      containers:
      - name: chemcentral-search
        image: {{ sq_image_registry }}/squonk/chemcentral-search:{{ sq_image_tag }}
{% if sq_image_tag in ['latest', 'stable'] %}
        imagePullPolicy: Always
{% else %}
        imagePullPolicy: IfNotPresent
{% endif %}
        terminationMessagePolicy: FallbackToLogsOnError
        ports:
        - containerPort: 8080
        resources:
          limits:
{% if sq_ccs_cpu_limit %}
            cpu: {{ sq_ccs_cpu_limit }}
{% endif %}
{% if sq_ccs_mem_limit %}
            memory: {{ sq_ccs_mem_limit }}
{% endif %}
          requests:
            cpu: {{ sq_ccs_cpu_request }}
            memory: {{ sq_ccs_mem_request }}
        readinessProbe:
          httpGet:
            path: /chemcentral-search/rest/ping
            port: 8080
          initialDelaySeconds: 60
          timeoutSeconds: 1
          periodSeconds: 20
        livenessProbe:
          httpGet:
            path: /chemcentral-search/rest/ping
            port: 8080
          initialDelaySeconds: 90
          timeoutSeconds: 1
          periodSeconds: 30
        env:
        - name: CHEMCENTRAL_HOST
          value: database.{{ sq_ccs_database_namespace }}.svc
        - name: CHEMCENTRAL_USER
          value: chemcentral
        - name: CHEMCENTRAL_PASSWORD
          value: {{ ccd_database_chemcentral_user_password_fact|default('undefined', true) }}
        - name: RABBITMQ_HOSTNAME
          valueFrom:
            secretKeyRef:
              name: rabbitmq
              key: host
        - name: RABBITMQ_SQUONK_PASSWORD
          valueFrom:
            secretKeyRef:
              name: rabbitmq
              key: default_user_password
        - name: JAVA_TOOL_OPTIONS
          value: "{{ sq_ccs_java_tool_options }}"
{% if sq_image_tag in ['latest', 'stable'] %}
        # CICD_TRIGGER_ID is variable whose value is used to force
        # a redeployment of the underlying containers. This is used in
        # situations where the origin image's tag may not have changed
        # (e.g. it's 'latest' or 'stable') but a new build is expected to
        # be available. Without changing something in the Deployment spec
        # a roll-out will not occur if the tag has not changed.
        - name: CICD_TRIGGER_ID
          value: '{{ ansible_date_time.iso8601_micro }}'
{% endif %}
