---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: jobexecutor
  namespace: {{ sq_namespace }}
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      name: jobexecutor
  template:
    metadata:
      name: jobexecutor
      labels:
        name: jobexecutor
    spec:
      serviceAccountName: squonk

      # Affinity - avoid 'worker' nodes,
      # and prefer 'application' nodes
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: informaticsmatters.com/purpose-application
                operator: Exists

      containers:
      - name: jobexecutor
        image: {{ sq_image_registry }}/squonk/jobexecutor-keycloak:{{ sq_image_tag }}
{% if sq_image_tag in ['latest', 'stable'] %}
        imagePullPolicy: Always
{% else %}
        imagePullPolicy: IfNotPresent
{% endif %}
        terminationMessagePolicy: FallbackToLogsOnError
        env:
        - name: SQUONK_CONTAINER_RUNNER_TYPE
          value: openshift
        - name: SQUONK_DOCKER_WORK_DIR
          value: /squonk/work/docker
        - name: SQUONK_CELL_JOB_PROJECT_NAME
          value: {{ sq_namespace }}
        - name: SQUONK_SERVICE_ACCOUNT
          value: squonk
        - name: SQUONK_POD_BASE_NAME
          value: squonk-cell-pod
        - name: SQUONK_POD_ENVIRONMENT
          valueFrom:
            secretKeyRef:
              name: squonk-app-secrets
              key: pod-env
        - name: SQUONK_POD_LOG_HISTORY
          value: '{{ sq_pod_log_history }}'
        - name: SQUONK_POD_IMAGE_PULL_POLICY
          value: '{{ sq_pod_image_pull_policy }}'
        - name: SQUONK_DEBUG_MODE
          value: '{{ sq_debug_mode }}'
        - name: SQUONK_POD_DEBUG_MODE
          value: '{{ sq_pod_debug_mode }}'
        - name: SQUONK_POD_CPU_RESOURCE
          value: '{{ sq_pod_cpu_resource }}'
        - name: SQUONK_JOBEXECUTOR_POLL_FOR_SERVICE_DESCRIPTORS
          value: "true"
        - name: SQUONK_NEXTFLOW_IMAGE
          value: {{ sq_nextflow_image }}
        - name: SQUONK_WORK_DIR_PVC_NAME
          value: workdir
        - name: KEYCLOAK_SERVER_URL
          value: "{{ sq_keycloak_url_fact }}"
        - name: KEYCLOAK_SERVER_REALM
          value: {{ sq_keycloak_realm }}
        - name: JAVA_TOOL_OPTIONS
          value: "{{ sq_je_java_tool_options }}"
{% if sq_image_tag in ['latest', 'stable'] %}
        # CICD_TRIGGER_ID is variable whose value is used to force
        # a redeployment of the underlying containers. This is used in
        # situations where the origin image's tag may not have changed
        # (e.g. it's 'latest' or 'stable') but a new build is expected to
        # be available. Without changing something in the Deployment spec
        # a roll-out will not occur if the tag has not changed.
        - name: CICD_TRIGGER_ID
          value: '{{ ansible_date_time.iso8601_micro }}'
{% endif %}
        ports:
        - name: http
          containerPort: 8080
        resources:
          limits:
{% if sq_je_cpu_limit %}
            cpu: {{ sq_je_cpu_limit }}
{% endif %}
{% if sq_je_mem_limit %}
            memory: {{ sq_je_mem_limit }}
{% endif %}
          requests:
            cpu: {{ sq_je_cpu_request }}
            memory: {{ sq_je_mem_request }}
        volumeMounts:
        - mountPath: /squonk/work/docker
          name: squonk-work-dir
        - mountPath: /usr/local/tomcat/webapps/jobexecutor/META-INF/context.xml
          name: jobexecutor-sso-config
          subPath: context.xml
          readOnly: true
        - mountPath: /usr/local/tomcat/webapps/jobexecutor/WEB-INF/keycloak.json
          name: jobexecutor-sso-config
          subPath: keycloak.json
          readOnly: true
        - mountPath: /usr/local/tomcat/webapps/jobexecutor/WEB-INF/web.xml
          name: jobexecutor-sso-config
          subPath: web.xml
          readOnly: true
        - mountPath: /usr/local/tomcat/conf/server.xml
          name: jobexecutor-sso-config
          subPath: server.xml
          readOnly: true

      volumes:
      - name: squonk-work-dir
        persistentVolumeClaim:
          claimName: workdir
      - name: jobexecutor-sso-config
        configMap:
          name: jobexecutor-sso-config
