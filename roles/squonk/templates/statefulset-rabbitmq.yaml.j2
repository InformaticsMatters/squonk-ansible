---
kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: rabbitmq
  namespace: {{ sq_namespace }}
spec:
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      name: rabbitmq
  serviceName: rabbitmq
  template:
    metadata:
      name: rabbitmq
      labels:
        name: rabbitmq
    spec:
      serviceAccountName: squonk

      # Affinity - avoid 'worker' nodes,
      # and prefer 'application' nodes
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: informaticsmatters.com/purpose-application
                operator: Exists

      # To access the mounted volumes
      # we set the security context's fsGroup
      # to the group that will be using the volume
      # In this case it's the rabbitmq group in the container
      # (obtained empirically)
      securityContext:
        fsGroup: 999

      containers:
      - name: rabbitmq
        image: rabbitmq:{{ sq_rabbitmq_version }}-management-alpine
        imagePullPolicy: IfNotPresent
        terminationMessagePolicy: FallbackToLogsOnError
        ports:
        - name: empd
          containerPort: 4369
        - name: ampq
          containerPort: 5672
        - name: http
          containerPort: 15672
        - name: erlang
          containerPort: 25672
        resources:
          limits:
{% if sq_rabbitmq_cpu_limit %}
            cpu: {{ sq_rabbitmq_cpu_limit }}
{% endif %}
{% if sq_rabbitmq_mem_limit %}
            memory: {{ sq_rabbitmq_mem_limit }}
{% endif %}
          requests:
            cpu: {{ sq_rabbitmq_cpu_request }}
            memory: {{ sq_rabbitmq_mem_request }}
        volumeMounts:
        # Configuration
        - name: rabbitmq-config
          mountPath: /etc/squonk
        env:
        - name: RABBITMQ_VM_MEMORY_HIGH_WATERMARK
          value: '0.5'
        - name: RABBITMQ_NODENAME
          value: rabbit@localhost
        - name: RABBITMQ_CONFIG_FILE
          value: /etc/squonk/rabbitmq
        - name: RABBITMQ_DEFAULT_USER
          value: guest
        - name: RABBITMQ_DEFAULT_PASS
          valueFrom:
            secretKeyRef:
              name: rabbitmq
              key: default_user_password
        - name: RABBITMQ_ERLANG_COOKIE
          valueFrom:
            secretKeyRef:
              name: rabbitmq
              key: erlang_cookie

      volumes:
      - name: rabbitmq-config
        configMap:
          name: rabbitmq-config
